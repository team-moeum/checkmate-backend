name: Deployment

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  SERVICE_NAME: checkmate-backend

on:
  push:
    branches:
      - develop

jobs:
  Checkout:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  ConfigureAWS:
    runs-on: self-hosted
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

  LoginToECR:
    runs-on: self-hosted
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
    steps:
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

  BuildAndPushImage:
    runs-on: self-hosted
    steps:
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ needs.LoginToECR.outputs.registry }}
        run: |
          docker build \
          --build-arg DATABASE_URL=${DATABASE_URL} \
          --build-arg DATABASE_USERNAME=${DATABASE_USERNAME} \
          --build-arg DATABASE_PASSWORD=${DATABASE_PASSWORD} \
          -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest"

  DeployToEC2:
    runs-on: self-hosted
    steps:
      - name: Deploy on EC2 instance
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ env.EC2_HOST }}
          username: ubuntu
          key: ${{ env.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/checkmate
            aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }}
            aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }}
            aws configure set region ${{ env.AWS_REGION }}
            ECR_REGISTRY_LOGIN=$(aws ecr get-login-password --region ${{ env.AWS_REGION }} | sudo docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }})
            sudo docker-compose stop ${{ env.SERVICE_NAME }} || true
            sudo docker-compose rm -f ${{ env.SERVICE_NAME }} || true
            sudo docker-compose pull ${{ env.SERVICE_NAME }}
            sudo docker-compose up -d ${{ env.SERVICE_NAME }}
