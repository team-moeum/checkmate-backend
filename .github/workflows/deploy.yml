name: Deployment

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  BEANSTALK_APP_NAME: beanstalk-checkmate
  BEANSTALK_ENV_NAME: beanstalk-checkmate
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}

on:
  push:
    branches:
      - develop

jobs:
  Checkout:
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  ConfigureAWS:
    runs-on: self-hosted
    needs: Checkout
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

  LoginAndBuildImage:
    runs-on: self-hosted
    needs: ConfigureAWS
    steps:
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build --no-cache --pull -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_ENV

  BeanstalkDeploy:
    runs-on: self-hosted
    needs: LoginAndBuildImage
    steps:
      - name: Create docker-compose.yml
        run: |
          cat <<EOF > docker-compose.yml
                version: "3"
                services:
                  checkmate-backend:
                    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest
                    restart: unless-stopped
                    network_mode: host
                    env_file: ".env"
                  
          EOF
          sed -i 's|\${ECR_REGISTRY}|'"${ECR_REGISTRY}"'|g' docker-compose.yml
          sed -i 's|\${ECR_REPOSITORY}|'"${ECR_REPOSITORY}"'|g' docker-compose.yml

      - name: Create .env file
        run: |
          echo "DATABASE_URL=\${DATABASE_URL}" > .env
          echo "DATABASE_USERNAME=\${DATABASE_USERNAME}" >> .env
          echo "DATABASE_PASSWORD=\${DATABASE_PASSWORD}" >> .env

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp docker-compose.yml deploy/docker-compose.yml
          cd deploy && zip -r deploy.zip .

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v14
        with:
          aws_access_key: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.BEANSTALK_APP_NAME }}
          environment_name: ${{ env.BEANSTALK_ENV_NAME }}
          version_label: docker-${{ github.sha }}
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 200
