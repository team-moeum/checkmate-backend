name: OAS Generator

on:
  workflow_dispatch:

env:
  TARGET_REPO: team-moeum/checkmate-frontend
  TARGET_BRANCH: main
  SOURCE_BRANCH: oas-${{ github.run_number }}-${{ github.run_attempt }}
  DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  SERVICE_NAME: checkmate-backend-docs
  PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

jobs:
  generate-swagger:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build and test swagger
        run: |
          # 1. Docker 네트워크 생성
          docker network create swagger-net

          # 2. 이미지 빌드
          docker build \
          --build-arg DATABASE_URL=${{ env.DATABASE_URL }} \
          --build-arg DATABASE_USERNAME=${{ env.DATABASE_USERNAME }} \
          --build-arg DATABASE_PASSWORD=${{ env.DATABASE_PASSWORD }} \
          -t swagger .

          # 3. 컨테이너 실행
          docker run -d \
            --network swagger-net \
            -p 8080:8080 \
            --name ${{ env.SERVICE_NAME }} swagger

          # 4. 애플리케이션 시작 대기 및 API 테스트
          echo "Waiting for application to start..."
          sleep 10

          # 5. 컨테이너 내부에서 API 호출
          docker exec ${{ env.SERVICE_NAME }} curl -s http://localhost:8080/api-docs/json > swagger.json

          if [ -s swagger.json ]; then
            echo "Successfully retrieved swagger.json"
          else
            echo "Failed to get swagger.json"
            docker logs ${{ env.SERVICE_NAME }}
            exit 1
          fi

      - name: Cleanup container
        if: always()
        run: |
          docker stop ${{ env.SERVICE_NAME }}
          docker rm ${{ env.SERVICE_NAME }}
          docker rmi swagger

      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.TARGET_REPO }}
          token: ${{ env.PERSONAL_ACCESS_TOKEN }}
          path: target-repo

      - name: Create Pull Request
        run: |
          cd target-repo
          git config --local user.email "moeum[bot]@users.noreply.github.com"
          git config --local user.name "moeum[bot]"

          git checkout -b ${{ env.SOURCE_BRANCH }}
          cp ../swagger.json ./swagger.json
          git add swagger.json
          git commit -m "Update swagger.json"
          git push origin ${{ env.SOURCE_BRANCH }}

          curl -X POST \
            -H "Authorization: token ${{ env.PERSONAL_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ env.TARGET_REPO }}/pulls \
            -d '{
              "title": "Update Swagger JSON",
              "body": "Automatically generated Swagger JSON update\n\nGenerated by workflow run #${{ github.run_number }}",
              "head": "${{ env.SOURCE_BRANCH }}",
              "base": "${{ env.TARGET_BRANCH }}"
            }'
